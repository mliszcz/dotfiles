# Pull the default configuration. All distributions provide that.
include /etc/sway/config

output * bg #000000 solid_color

output eDP-1 position 1920 0
output HDMI-A-1 position 0 0

input type:touchpad {
    dwt enabled
    tap enabled
    tap_button_map lrm
    natural_scroll disabled
}

input type:keyboard {
    xkb_layout pl
    xkb_options caps:escape
}

for_window [title="quicklaunch"] \
    floating enable, \
    floating_minimum_size 900 x 400, \
    floating_maximum_size 900 x 400, \
    border none

# Set the launcher program. This is by default bound to $mod+d. We need to
# bind it again overwriting the previous binding because $menu is expanded
# eagerly during bind time. Using --no-warn silences the overwrite warning.
set $menu foot --title quicklaunch -e ~/.config/sway/launcher.sh
bindsym --no-warn $mod+d exec $menu

xwayland enable

# Hide window title bars and outer borders.
default_border pixel 2
hide_edge_borders both

# Alt-Tab toggles workspace.
bindsym Mod1+Tab workspace back_and_forth
bindsym Mod1+Shift+Tab workspace back_and_forth

# Toggle waybar visibility.
bindsym $mod+x exec killall -SIGUSR1 waybar

# Screenshot keys mapping, similar to the usual DE configuration.
# https://help.gnome.org/users/gnome-help/stable/screen-shot-record.html.en
# Note: On Anne 2 Pro the Print key is mapped to FN2+P. Shift/Ctrl modifier
# keys must be pressed before FN2+P is pressed, otherwise they are ignored.
# The print mapping without any modifiers is already present in the default
# configuration, it is left here with --no-warn option just for symmetry.
set $print Print
bindsym --no-warn $print exec grim
bindsym Mod1+$print exec grim -g "$(~/.config/sway/get-active-window-position.sh)"
bindsym Shift+$print exec grim -g "$(slurp -d)"
bindsym Control+$print exec grim - | wl-copy
bindsym Control+Mod1+$print exec grim -g "$(~/.config/sway/get-active-window-position.sh)" - | wl-copy
bindsym Control+Shift+$print exec grim -g "$(slurp -d)" - | wl-copy

# Win+Shift+S opens the snipping tool on Windows.
bindsym Mod4+Shift+s exec grim -g "$(slurp -d)" - | swappy -f - -o - | wl-copy

# Lock the screen, sleep for 1 second and enter the 'idle' state immediately.
bindsym $mod+Escape exec "swaylock -f -c 000000; sleep 1; pkill -USR1 swayidle"

# Disable the output when the lid is closed. All workspaces will be
# moved to the remaining window and the display will be powered off.
bindswitch --locked lid:on output eDP-1 disable
bindswitch --locked lid:off output eDP-1 enable

# Modify bar configuration. We need to specify the bar ID because the default
# configuration already defines a bar. Without the explicit bar ID sway would
# allocate a new one resulting in two bars being displayed. The ID allocation
# logic is located in sway/commands/bar.c.
bar "bar-0" {
    swaybar_command waybar
}

# Configure swayidle with zero timeout. This has a special handling: no timer
# is started and the 'idle' state can be started only by an explicitly request
# with SIGUSR1 (from $mod+Escape). We then shut-down all displays and activate
# them as soon as 'idle' state ends.
# The second variant with a 10 seconds timeout is applicable only if swaylock
# is running. It powers the display off if user aborts the unlocking process.
# Note that sending SIGUSR1 also triggers this handler and both are executed.
exec swayidle \
    timeout 0 'swaymsg "output * power off"' \
    resume 'swaymsg "output * power on"' \
    timeout 10 'pgrep swaylock && swaymsg "output * power off"' \
    resume 'pgrep swyalock && swaymsg "output * power on"' \

# Run notification daemon. For mako this is not needed as it comes with dbus
# activation configured out of the box. But if another notification daemon is
# present in the system and already took 'org.freedesktop.Notifications' name
# mako will not start anyway.
# exec mako

exec ~/.config/sway/dynamic-workspace-name.sh
